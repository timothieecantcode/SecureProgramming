Crypto API â€” quick usage
Generate/load keys
from SOCP.client.crypto_km import gen_rsa_4096, save_pem_priv, load_pem_priv, pub_der_b64u
sk = gen_rsa_4096()
save_pem_priv(sk, "me.pem", password=b"pwd")
sk = load_pem_priv("me.pem", password=b"pwd")
pub_b64u = pub_der_b64u(sk)  # share with others / directory

Send DM
from SOCP.client.crypto_dm import make_dm_payload
payload = make_dm_payload(my_priv, peer_pub_b64u, msg_bytes, from_id, to_id, ts_ms)
envelope = {"type":"MSG_PRIVATE","from":from_id,"to":to_id,"ts":ts_ms,"payload":payload,"sig":""}

Receive DM
from SOCP.client.crypto_dm import open_dm_payload
pt, sender_pub = open_dm_payload(my_priv, envelope["payload"], envelope["from"], envelope["to"], envelope["ts"])

Create group & distribute key
from SOCP.client.crypto_group import make_group_shares, verify_group_shares, unwrap_group_key_for_me
shares = make_group_shares(my_priv, group_id, member_pub_map)  # dict[user_id] = pub_der_b64u
# send as GROUP_KEY_SHARE
# receiver side:
assert verify_group_shares(shares["creator_pub"], shares)
group_key = unwrap_group_key_for_me(my_priv, shares, my_user_id)

Send group message / receive
from SOCP.client.crypto_group import make_group_msg_payload, open_group_msg_payload
payload = make_group_msg_payload(my_priv, group_id, group_key, msg_bytes, from_id, ts_ms)
pt, sender_pub = open_group_msg_payload(group_key, payload, from_id, ts_ms)

File transfer (DM)
from SOCP.client.crypto_file import gen_file_key32, wrap_file_key_for_dm, make_file_chunk_payload
file_key = gen_file_key32()
wrapped = wrap_file_key_for_dm(peer_pub_b64u, file_key)  # put in FILE_START
chunk_payload = make_file_chunk_payload(file_key, file_id, index, chunk_bytes)

File transfer (Group)
chunk_payload = make_file_chunk_payload(group_key, file_id, index, chunk_bytes)

Server transport signature (envelope sig)
from SOCP.server.transport_sig import server_sign_payload, server_verify_payload
envelope["sig"] = server_sign_payload(server_priv, envelope["payload"])
# on receive:
ok = server_verify_payload(sender_server_pub_b64u, envelope["payload"], envelope["sig"])